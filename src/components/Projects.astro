---
import ProjectCard from './ProjectCard.astro';

const projectsData = [
  {
    slug: "api-todo-list",
    title: "API REST de Lista de Tareas",
    description: "API REST funcional desarrollada con Java 17 y Spring Boot 3 para gestionar tareas mediante operaciones CRUD. Implementa arquitectura en capas, persistencia con JPA y base de datos en memoria H2.",
    tech: ["Java 17", "Spring Boot 3", "Spring Data JPA", "H2"],
    link: "https://github.com/TiagoV69/To-do-list.git"
  },
  {
    slug: "ecommerce-spring",
    title: "E-commerce Robusto con Spring Security",
    description: "Plataforma de comercio electrónico con registro, login seguro mediante JWT, gestión de productos y pedidos con lógica transaccional. Incluye documentación interactiva generada con SpringDoc OpenAPI.",
    tech: ["Spring Boot", "Spring Security", "JWT", "MySQL", "SpringDoc OpenAPI"],
    link: "https://github.com/TiagoV69/Shop.git"
  },
  {
    slug: "url-shortener",
    title: "Microservicio Acortador de URLs",
    description: "Microservicio de alto rendimiento que convierte URLs largas en enlaces cortos únicos. Incluye validación de entrada, manejo centralizado de errores y documentación con Swagger.",
    tech: ["Spring Boot 3", "Spring Data JPA", "Validation", "H2", "Lombok", "SpringDoc OpenAPI"],
    link: "https://github.com/TiagoV69/URLs-Shortener.git"
  },
  {
    slug: "finance-tracker-api",
    title: "API para Gestor de Finanzas Personales",
    description: "API RESTful segura y dockerizada para gestionar finanzas personales, con autenticación JWT, manejo de categorías y transacciones, y base de datos PostgreSQL en entorno aislado.",
    tech: ["Java 17", "Spring Boot 3", "Spring Security", "JWT", "PostgreSQL", "Docker"],
    link: "https://github.com/TiagoV69/Personal-Finance-Tracker.git"
  }
];
---
<section class="bg-slate-100 py-32 px-4 scroll-animate" id="projects-section">
  <div class="max-w-6xl mx-auto">
    <h2 class="text-4xl font-bold text-slate-900 mb-16 text-center">Mis Proyectos</h2>
    
    <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
      {projectsData.map(project => (
        <ProjectCard
          slug={project.slug}
          title={project.title}
          description={project.description}
          tech={project.tech}
          link={project.link}
        />
      ))}
    </div>
  </div>
</section>